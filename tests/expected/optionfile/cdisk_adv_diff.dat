element types:  {'CoordinateMesh': ('CG', 1), 'VelocityMesh': ('CG', 1)}
states:  {'Fluid': {'Tracer': Coefficient(FiniteElement('Lagrange', Cell('triangle', Space(2)), 1, None), 1)}, {'Velocity': Coefficient(VectorElement('Lagrange', Cell('triangle', Space(2)), 1, 2, None), 0)}, {'TracerDiffusivity': Coefficient(TensorElement('Lagrange', Cell('triangle', Space(2)), 1, (2, 2), None, None), 2)}}
ufl input:  {'FluidTracer': ('T = state.scalar_fields["Tracer"]\n\nv=TestFunction(T)\nu=TrialFunction(T)\nf=Coefficient(T)\n\nA = v*u*dx\nRHS = v*f*dx\n\np=solve(A, RHS)\nstate.scalar_fields["Tracer"]=p', {'Tracer': Coefficient(FiniteElement('Lagrange', Cell('triangle', Space(2)), 1, None), 1)}, {'Velocity': Coefficient(VectorElement('Lagrange', Cell('triangle', Space(2)), 1, 2, None), 0)}, {'TracerDiffusivity': Coefficient(TensorElement('Lagrange', Cell('triangle', Space(2)), 1, (2, 2), None, None), 2)})}
