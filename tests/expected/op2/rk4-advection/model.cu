// Generated by the Manycore Form Compiler.
// https://github.com/gmarkall/manycore_form_compiler




void rhs3(double localTensor[3], double dt, double detwei[6], double c1[3][2], double c0[3], double c2[3], double CG1[3][6], double d_CG1[2][6][3])
{
  double c_q1[6][2];
  double c_q0[6];
  double c_q2[6];
  double d_c_q1[6][2][2];
  for(int i_g = 0; i_g < 6; i_g++)
  {
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      c_q1[i_g][i_d_0] = 0.0;
      for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
      {
        c_q1[i_g][i_d_0] += c1[i_r_0][i_d_0] * CG1[i_r_0][i_g];
      };
    };
    c_q0[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q0[i_g] += c0[i_r_0] * CG1[i_r_0][i_g];
    };
    c_q2[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q2[i_g] += c2[i_r_0] * CG1[i_r_0][i_g];
    };
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      for(int i_d_1 = 0; i_d_1 < 2; i_d_1++)
      {
        d_c_q1[i_g][i_d_0][i_d_1] = 0.0;
        for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
        {
          d_c_q1[i_g][i_d_0][i_d_1] += c1[i_r_0][i_d_0] * d_CG1[i_d_0][i_g][i_r_0];
        };
      };
    };
  };
  for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
  {
    localTensor[i_r_0] = 0.0;
    for(int i_g = 0; i_g < 6; i_g++)
    {
      for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
      {
        localTensor[i_r_0] += dt * (c_q1[i_g][i_d_0] * d_CG1[i_d_0][i_g][i_r_0] * (c_q0[i_g] + 0.5 * c_q2[i_g]) + -1 * d_c_q1[i_g][i_d_2] * CG1[i_r_0][i_g] * (c_q0[i_g] + 0.5 * c_q2[i_g])) * detwei[i_g];
        for(int i_d_2 = 0; i_d_2 < 2; i_d_2++)
        {

        };
      };
    };
  };
}

void M(double localTensor[3][3], double dt, double detwei[6], double CG1[3][6])
{
  for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
  {
    for(int i_r_1 = 0; i_r_1 < 3; i_r_1++)
    {
      localTensor[i_r_0][i_r_1] = 0.0;
      for(int i_g = 0; i_g < 6; i_g++)
      {
        localTensor[i_r_0][i_r_1] += CG1[i_r_0][i_g] * CG1[i_r_1][i_g] * detwei[i_g];
      };
    };
  };
}

void rhs4(double localTensor[3], double dt, double detwei[6], double c1[3][2], double c0[3], double c2[3], double CG1[3][6], double d_CG1[2][6][3])
{
  double c_q1[6][2];
  double c_q0[6];
  double c_q2[6];
  double d_c_q1[6][2][2];
  for(int i_g = 0; i_g < 6; i_g++)
  {
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      c_q1[i_g][i_d_0] = 0.0;
      for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
      {
        c_q1[i_g][i_d_0] += c1[i_r_0][i_d_0] * CG1[i_r_0][i_g];
      };
    };
    c_q0[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q0[i_g] += c0[i_r_0] * CG1[i_r_0][i_g];
    };
    c_q2[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q2[i_g] += c2[i_r_0] * CG1[i_r_0][i_g];
    };
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      for(int i_d_1 = 0; i_d_1 < 2; i_d_1++)
      {
        d_c_q1[i_g][i_d_0][i_d_1] = 0.0;
        for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
        {
          d_c_q1[i_g][i_d_0][i_d_1] += c1[i_r_0][i_d_0] * d_CG1[i_d_0][i_g][i_r_0];
        };
      };
    };
  };
  for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
  {
    localTensor[i_r_0] = 0.0;
    for(int i_g = 0; i_g < 6; i_g++)
    {
      for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
      {
        localTensor[i_r_0] += dt * (c_q1[i_g][i_d_0] * d_CG1[i_d_0][i_g][i_r_0] * (c_q0[i_g] + c_q2[i_g]) + -1 * d_c_q1[i_g][i_d_2] * CG1[i_r_0][i_g] * (c_q0[i_g] + c_q2[i_g])) * detwei[i_g];
        for(int i_d_2 = 0; i_d_2 < 2; i_d_2++)
        {

        };
      };
    };
  };
}

void rhs2(double localTensor[3], double dt, double detwei[6], double c1[3][2], double c0[3], double c2[3], double CG1[3][6], double d_CG1[2][6][3])
{
  double c_q1[6][2];
  double c_q0[6];
  double c_q2[6];
  double d_c_q1[6][2][2];
  for(int i_g = 0; i_g < 6; i_g++)
  {
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      c_q1[i_g][i_d_0] = 0.0;
      for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
      {
        c_q1[i_g][i_d_0] += c1[i_r_0][i_d_0] * CG1[i_r_0][i_g];
      };
    };
    c_q0[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q0[i_g] += c0[i_r_0] * CG1[i_r_0][i_g];
    };
    c_q2[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q2[i_g] += c2[i_r_0] * CG1[i_r_0][i_g];
    };
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      for(int i_d_1 = 0; i_d_1 < 2; i_d_1++)
      {
        d_c_q1[i_g][i_d_0][i_d_1] = 0.0;
        for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
        {
          d_c_q1[i_g][i_d_0][i_d_1] += c1[i_r_0][i_d_0] * d_CG1[i_d_0][i_g][i_r_0];
        };
      };
    };
  };
  for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
  {
    localTensor[i_r_0] = 0.0;
    for(int i_g = 0; i_g < 6; i_g++)
    {
      for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
      {
        localTensor[i_r_0] += dt * (c_q1[i_g][i_d_0] * d_CG1[i_d_0][i_g][i_r_0] * (c_q0[i_g] + 0.5 * c_q2[i_g]) + -1 * d_c_q1[i_g][i_d_2] * CG1[i_r_0][i_g] * (c_q0[i_g] + 0.5 * c_q2[i_g])) * detwei[i_g];
        for(int i_d_2 = 0; i_d_2 < 2; i_d_2++)
        {

        };
      };
    };
  };
}

void rhs1(double localTensor[3], double dt, double detwei[6], double c0[3], double c1[3][2], double CG1[3][6], double d_CG1[2][6][3])
{
  double c_q0[6];
  double c_q1[6][2];
  double d_c_q1[6][2][2];
  for(int i_g = 0; i_g < 6; i_g++)
  {
    c_q0[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q0[i_g] += c0[i_r_0] * CG1[i_r_0][i_g];
    };
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      c_q1[i_g][i_d_0] = 0.0;
      for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
      {
        c_q1[i_g][i_d_0] += c1[i_r_0][i_d_0] * CG1[i_r_0][i_g];
      };
    };
    for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
    {
      for(int i_d_1 = 0; i_d_1 < 2; i_d_1++)
      {
        d_c_q1[i_g][i_d_0][i_d_1] = 0.0;
        for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
        {
          d_c_q1[i_g][i_d_0][i_d_1] += c1[i_r_0][i_d_0] * d_CG1[i_d_0][i_g][i_r_0];
        };
      };
    };
  };
  for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
  {
    localTensor[i_r_0] = 0.0;
    for(int i_g = 0; i_g < 6; i_g++)
    {
      for(int i_d_0 = 0; i_d_0 < 2; i_d_0++)
      {
        localTensor[i_r_0] += dt * (c_q0[i_g] * c_q1[i_g][i_d_0] * d_CG1[i_d_0][i_g][i_r_0] + -1 * d_c_q1[i_g][i_d_2] * CG1[i_r_0][i_g] * c_q0[i_g]) * detwei[i_g];
        for(int i_d_2 = 0; i_d_2 < 2; i_d_2++)
        {

        };
      };
    };
  };
}

void ta(double localTensor[3], double dt, double detwei[6], double c4[3], double c3[3], double c2[3], double c0[3], double c1[3], double CG1[3][6])
{
  double c_q4[6];
  double c_q3[6];
  double c_q2[6];
  double c_q0[6];
  double c_q1[6];
  for(int i_g = 0; i_g < 6; i_g++)
  {
    c_q4[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q4[i_g] += c4[i_r_0] * CG1[i_r_0][i_g];
    };
    c_q3[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q3[i_g] += c3[i_r_0] * CG1[i_r_0][i_g];
    };
    c_q2[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q2[i_g] += c2[i_r_0] * CG1[i_r_0][i_g];
    };
    c_q0[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q0[i_g] += c0[i_r_0] * CG1[i_r_0][i_g];
    };
    c_q1[i_g] = 0.0;
    for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
    {
      c_q1[i_g] += c1[i_r_0] * CG1[i_r_0][i_g];
    };
  };
  for(int i_r_0 = 0; i_r_0 < 3; i_r_0++)
  {
    localTensor[i_r_0] = 0.0;
    for(int i_g = 0; i_g < 6; i_g++)
    {
      localTensor[i_r_0] += (0.166666666667 * CG1[i_r_0][i_g] * c_q4[i_g] + 0.333333333333 * CG1[i_r_0][i_g] * c_q3[i_g] + 0.333333333333 * CG1[i_r_0][i_g] * c_q2[i_g] + CG1[i_r_0][i_g] * c_q0[i_g] + 0.166666666667 * CG1[i_r_0][i_g] * c_q1[i_g]) * detwei[i_g];
    };
  };
}



