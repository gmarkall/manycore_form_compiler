V = state.vector_fields["Velocity", n] # Velocity space
H = state.scalar_fields["Height",   n] # Height space
W = V*H                                # Mixed space of both.

(v, q) = TestFunctions(W)
(u, h) = TrialFunctions(W)
fluidstate=Coefficient(W)

M_u=inner(v,u)*dx                            # Velocity mass matrix
M_h=q*h*dx                                   # Height mass matrix

Ct=-inner(grad(q),u)*dx                      # Velocity divergence operator

depth = 5.0  
g = 10.0
c2 = g*depth
f = 1.0313e-04 

C=-c2*adjoint(Ct)                            # Pressure gradient operator

F=f*inner(v,as_vector([-u[1],u[0]]))*dx      # Coriolis term

A=M_u+M_h+0.5*dt*(C+Ct+F)                    # System matrix

A_r=M_u+M_h-0.5*dt*(C+Ct+F)                  # Right hand side form

rhs=action(A_r,fluidstate)

# Solve the shallow water equations.
(Vnew, Hnew) =  solve(A, rhs)

state.scalar_fields["Height",   n+1] = Hnew
state.vector_fields["Velocity", n+1] = Vnew
